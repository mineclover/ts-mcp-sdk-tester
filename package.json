{
  "name": "mcp-sdk-tester",
  "version": "1.0.0",
  "module": "index.ts",
  "type": "module",
  "private": true,
  "scripts": {
    "build": "mkdir -p dist && bun build --compile --outfile=dist/$npm_package_name index.ts",
    "build:simple": "mkdir -p dist && bun build --compile --outfile=dist/simple-mcp-server simple-server.ts",
    "type-check": "bun x typescript --noEmit --strict --project tsconfig.json",
    "dev": "bun --watch index.ts --transport http --port 3000",
    "dev:simple": "bun --watch simple-server.ts --port=3000",
    "show-package-name": "echo $npm_package_name",
    "format": "biome format --write .",
    "format:check": "biome format .",
    "lint": "biome lint --write .",
    "lint:check": "biome lint .",
    "check": "biome check --write .",
    "check:ci": "biome ci ."
  },
  "bun-create": {
    "start": "bun run echo 'Read README.md and implement an MCP server'"
  },
  "devDependencies": {
    "@biomejs/biome": "^2.1.2",
    "@types/bun": "latest",
    "@types/express": "^5.0.3",
    "@types/cors": "^2.8.19"
  },
  "peerDependencies": {
    "typescript": "^5.8.3"
  },
  "dependencies": {
    "@modelcontextprotocol/sdk": "^1.17.0",
    "@opentelemetry/api": "^1.6.0",
    "@opentelemetry/auto-instrumentations-node": "^0.39.4",
    "@opentelemetry/core": "^1.18.0",
    "@opentelemetry/exporter-metrics-otlp-http": "^0.45.0",
    "@opentelemetry/exporter-trace-otlp-http": "^0.45.0",
    "@opentelemetry/resources": "^1.18.0",
    "@opentelemetry/sdk-metrics": "^1.18.0",
    "@opentelemetry/sdk-node": "^0.45.0",
    "@opentelemetry/sdk-trace-base": "^1.18.0",
    "@opentelemetry/semantic-conventions": "^1.18.0",
    "commander": "^14.0.0",
    "cors": "^2.8.5",
    "express": "^4.21.2",
    "zod": "^3.22.4"
  }
}
